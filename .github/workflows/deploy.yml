name: Deploy to Production

on:
  push:
    branches:
      - main  # Triggeröi pipeline, kun muutoksia pusketaan päähaaraan

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Ota koodi käyttöön
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Asenna Python ja riippuvuudet
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    # 3. Luo .env-prod tiedosto salaisuuksista
    - name: Create .env file from secrets
      run: |
        echo "FLASK_APP=main.py" >> .env
        echo "FLASK_ENV=production" >> .env
        echo "SECRET_KEY=${{ secrets.FLASK_SECRET_KEY }}" >> .env
        echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
        echo "DATABASE_USER=produser" >> .env
        echo "DATABASE_HOST=prod-db-host" >> .env
        echo "DATABASE_PORT=3306" >> .env
        echo "DB_DRIVER=mariadb" >> .env

    # 4. Yhdistä palvelimeen ja siirrä tiedostot
    - name: Copy files to server
      uses: appleboy/scp-action@v0.2.1
      with:
        host: ${{ secrets.RASPBERRY_PI_IP }}
        username: ${{ secrets.PROD_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "."
        target: "/home/juhojarvi/jyty-web-backend"

    # 5. Käynnistä flask-sovellus palvelimella (esim. systemctl tai docker)
    - name: Restart server application
      run: |
        ssh -i ${{ secrets.SSH_KEY }} ${{ secrets.PROD_USER }}@${{ secrets.RASPBERRY_PI_IP }} << 'EOF'
        cd /home/juhojarvi/jyty-web-backend
        docker-compose down
        docker-compose up -d --build
        EOF